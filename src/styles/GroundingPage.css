.grounding-wrapper-container {
    height: 100vh;
    width: 100vw; /* Ocupa toda a largura da viewport para permitir o swipe */
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    background: linear-gradient(to bottom, #c2f0d3, #ffe5a5, #ff8787); /* Background da página */
    position: relative; /* Para o back-circle se posicionar em relação a ele */
    overflow: hidden; /* Esconde o scroll horizontal durante o swipe */
}

/* Style for the back circle button */
.back-circle {
    position: absolute;
    top: 50%;
    /* Ajustado para a nova largura do card (600px) e a distância do botão (60px) */
    left: calc(50% - 300px - 60px); /* 50% - (largura_card / 2) - (largura_botao) */
    transform: translateY(-50%);
    width: 60px;
    height: 60px;
    background-color: rgba(0, 0, 0, 0.3); /* Consistente com a opacidade dos botões */
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    transition: background-color 0.3s ease, transform 0.2s ease;
    z-index: 10;
}

.back-circle .back-icon {
    width: 30px;
    height: 30px;
    opacity: 0.85;
}

.back-circle:hover {
    background-color: rgba(0, 0, 0, 0.5); /* Um pouco mais escuro no hover */
    transform: translateY(-50%) scale(1.05);
}

/* Removido o seletor .back-circle img que estava duplicado e com filter invert(100%) */


/* O grounding-container agora é o que mantém o card centralizado dentro do wrapper */
.grounding-container {
    height: 100vh; /* Para centralizar o card verticalmente */
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    position: relative; /* Necessário para positioning de elementos dentro do card, se houver */
    /* background: none; - se você não quiser background aqui */
}

.grounding-card {
    background: rgba(0, 0, 0, 0.5);
    border-radius: 0;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.4);
    width: 600px; /* Largura que você definiu */
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: 0; /* Remove margens para ocupar 100vh */
    padding: 30px; /* Adicionado padding aqui, se removido antes. Importante para o espaçamento interno */
    box-sizing: border-box; /* Garante que padding e borda sejam incluídos na largura/altura */
}

.grounding-card h1 {
    color: white;
    font-size: xx-large;
    font-weight: bold;
    margin-bottom: 0;
}

.grounding-card h2 {
    color: white;
    font-size: large;
    font-weight: lighter;
    margin-top: 0;
    margin-bottom: 20px;
}

.grounding-card h3 {
    color: white;
    font-size: x-large;
    margin-bottom: 5px;
}

.grounding-card p {
    color: white;
    font-size: medium;
    font-weight: lighter;
    margin-top: 0;
    margin-bottom: 20px;
}

/* O placeholder não é mais um div, mas uma imagem diretamente */
.illustration-placeholder {
    /* Manter para caso precise de um contêiner para a imagem */
    width: 150px;
    height: 150px;
    margin-bottom: 30px;
    margin-top: 30px;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Estilo para a imagem de ilustração */
.illustration-image {
    width: 200px; /* Largura base para a imagem */
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
}

.item-counter {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
}

.current-item-text {
    color: white;
    font-size: x-large;
    margin-bottom: 15px;
}

.counter-buttons {
    display: flex;
    gap: 8px; /* Gap entre os botões */
    margin-bottom: 20px;
    justify-content: center;
    align-items: center;
}

.round-button {
    background: #000; /* Fundo preto padrão */
    opacity: 0.3; /* Opacidade de 30% padrão */
    color: #FFF; /* Cor do texto branca no estado normal */
    font-family: Poppins;
    font-size: 48px;
    font-style: normal;
    font-weight: 900;
    line-height: normal;
    border: none;
    width: 60px;
    height: 60px;
    flex-shrink: 0;
    aspect-ratio: 1/1;
    cursor: pointer;
    transition: opacity 0.3s ease, transform 0.2s ease, background-color 0.3s ease, color 0.3s ease;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

/* Estilos específicos de borda para o botão de MENOS */
.counter-buttons .round-button:first-child {
    border-radius: 30px 0px 0px 20px;
}

/* Estilos específicos de borda para o botão de MAIS (e check-button) */
.counter-buttons .round-button:last-child {
    border-radius: 0px 20px 30px 0px;
    width: 80px; /* Largura aumentada para o botão + */
}

/* Estilos para HOVER */
.round-button:hover {
    transform: scale(1.05);
    opacity: 1 !important;
    color: #333333 !important;
}

/* Cores específicas para o botão MENOS no hover */
.counter-buttons .round-button:first-child:hover {
    background-color: #FF114C !important;
}

/* Cores específicas para o botão MAIS no hover */
.counter-buttons .round-button:last-child:hover {
    background-color: #3FFFC9 !important;
}

/* Estilo para ACTIVE (clique) */
.round-button:active {
    transform: scale(0.95);
    opacity: 1 !important;
    color: #333333 !important;
    outline: none;
}

/* Cores específicas para o botão MENOS no active */
.counter-buttons .round-button:first-child:active {
    background-color: #FF114C !important;
}

/* Cores específicas para o botão MAIS no active */
.counter-buttons .round-button:last-child:active {
    background-color: #3FFFC9 !important;
}

/* Estilo para o botão de check (quando objectCount atinge o máximo) */
.check-button {
    background: #000000; /* Fundo preto padrão */
    opacity: 0.3; /* Opacidade de 30% padrão */
    color: #FFF; /* Cor do texto/ícone branca no estado normal */
    border-radius: 0px 20px 30px 0px; /* Mantém o border-radius do botão + */
    cursor: pointer;
    width: 80px; /* Largura aumentada para o botão de check */
    height: 60px;
    flex-shrink: 0;
    aspect-ratio: 1/1;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    transition: opacity 0.3s ease, transform 0.2s ease, background-color 0.3s ease, color 0.3s ease;
}

.check-button .check-icon-img {
    width: 30px;
    height: 30px;
    /* Remover filter: invert(100%); aqui, será aplicado no hover/active */
    /* opacity: 1; - opacidade da imagem em si, não do botão */
    transition: filter 0.3s ease, opacity 0.3s ease; /* Adicionar transição para o ícone */
}   

/* Estilos para HOVER e ACTIVE (clique) do botão de check */
.check-button:hover,
.check-button:active {
    background-color: #3FFFC9; /* Ciano para o botão de check no hover/active */
    opacity: 1 !important; /* Opacidade total */
    color: #333333 !important; /* Cor do texto/ícone para um cinza escuro */
    transform: scale(1.05); /* Mantém o efeito de escala no hover */
    outline: none;
}

/* Efeito de "afundar" para o botão de check ao ser clicado */
.check-button:active {
    transform: scale(0.95);
}

/* Inverter cores do ícone no HOVER e ACTIVE do botão de check */
.check-button:hover .check-icon-img, 
.check-button:active .check-icon-img {
    filter: invert(0%); /* Se o ícone for escuro e você quiser ele normal, ou 'invert(100%)' se ele for claro e quiser que fique escuro */
    opacity: 0.8; /* Opacidade do ícone no hover/active */
}

/* Dots de navegação */
.grounding-dots-container {
    display: flex;
    gap: 8px;
    margin-top: 20px;
}

.grounding-dot {
    width: 10px;
    height: 10px;
    background-color: rgba(255, 255, 255, 0.4);
    border-radius: 50%;
    transition: background-color 0.3s ease;
}

.grounding-dot.active {
    background-color: white;
}